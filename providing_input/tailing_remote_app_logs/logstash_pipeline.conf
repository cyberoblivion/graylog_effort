input {
  file {
    path => "<logfile1_path>/<historical_logfile1_name>.log"
    sincedb_path => "/dev/null"
    start_position => beginning
    add_field => { "application" => "<app_name>" }
    add_field => { "instance" => "<instance_name1>" }
    add_field => { "source_file" => "%{path}" }
  }
  file {
    path => "<logfile2_path>/<historical_logfile2_name>.log"
    sincedb_path => "/dev/null"
    start_position => beginning
    add_field => { "application" => "<app_name>" }
    add_field => { "instance" => "<instance_name2>" }
    add_field => { "source_file" => "%{path}" }
  }
}

# The multiline filter pattern handles java stacktraces.  
filter {
  multiline {
    remove_field => [ "path" ]
    pattern => "(^\z.+)|(^(?!.*3\dm\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2},\d{3}).*$)"
    what => "previous"
  }
}

output {
  gelf {
    host => "<your_graylog_host_ip>"
    port => "<port_num (beginning at 12201)>"
    full_message => ""
    facility => ""
  }
  stdout {}
}